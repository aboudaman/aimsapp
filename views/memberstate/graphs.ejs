<div id="chart"></div>
    <!--Div that will hold the pie chart-->
    <div id="chart_div" style="width:400; height:300"></div>

<form action="">

  <button type="submit" class="btn button btn-primary">create chart</button>
</form>
<script>
  const createLine = () => {
    let data = ""
    let chart = ""

    // Load the Visualization API and the piechart package.
    google.charts.load('current', {'packages':['corechart']});

    // Set a callback to run when the Google Visualization API is loaded.
    
    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    let url=`/graphsapi/5ef372cceb81d536e04bc941`
      fetch(url)
        .then(response => response.json())
        .then((result) => {
          google.charts.setOnLoadCallback(drawChart.bind(this, result))
          console.log(result)
      })
      .then(() => {})
      .catch(error => console.log(error.message))
    function drawChart(result) {
      // Create our data table.
      data = new google.visualization.DataTable();
      data.addColumn('string', 'Topping');
      data.addColumn('number', 'Slices');
      // for (let i=1; i<=10; i++) {
      //   data.addRow(["one " + ob, i]);
      // }
      for (const val of result.livestocks) {
            data.addRow([val.livestock + ' ' 
            + val.memberState.countryName + ' '
            + new Date(val.year).getFullYear(), val.quantity]);
      }

    // data.addRows([
    //   ['Mushrooms', 3],
    //   ['Onions', 1],
    //   ['Olives', 1],
    //   ['Zucchini', 1],
    //   ['Pepperoni', 2]
    // ]);

    // Set chart options
      const options = {'title':'How Much Pizza I Ate Last Night',
              'width':400,
              'height':300
      };

      // Instantiate and draw our chart, passing in some options.
      chart = new google.visualization.PieChart(document.getElementById('chart_div'));
      google.visualization.events.addListener(chart, 'select', selectHandler);
      chart.draw(data, options);
    }

    function selectHandler() {
      const selectedItem = chart.getSelection()[0];
      const value = data.getValue(selectedItem.row, 0);
      alert('You user selected ' + value);
    }

  }
    
    document.addEventListener("submit", async function (event) {
    event.preventDefault()
    createLine()
    })

</script>



<!-- D3 JS -->
<!-- <script>
  const margin = { left:80, right:20, top:50, bottom:100 };

  const width = 600 - margin.left - margin.right,
  height = 400 - margin.top - margin.bottom;
        // X Scale
        const x = d3.scaleBand()
      .range([0, width])
      .padding(0.2);

      // Y Scale
      const y = d3.scaleLinear()
      .range([height, 0]);

      const g = d3.select("#chart")
      .append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

function update(data) {

  x.domain(data.map(function(d){ return d.month }))
  y.domain([0, d3.max(data, function(d) { return d.revenue })])
  // X Axis
  const xAxisCall = d3.axisBottom(x);
  g.append("g")
  .attr("class", "x axis")
  .attr("transform", "translate(0," + height +")")
  .call(xAxisCall);

// Y Axis
const yAxisCall = d3.axisLeft(y)
    .tickFormat(function(d){ return "$" + d; });
g.append("g")
    .attr("class", "y axis")
    .call(yAxisCall);

// Bars
// const rects = g.selectAll("rect")
//     .data(data)
    
// rects.enter()
//     .append("rect")
//         .attr("y", function(d){ return y(d.revenue); })
//         .attr("x", function(d){ return x(d.month) })
//         .attr("height", function(d){ return height - y(d.revenue); })
//         .attr("width", x.bandwidth)
//         .attr("fill", "grey");
}



  const creatLine = () => {
      let dataArray = []
      let countryArray = []
      let url=`/graphsapi/5ef372cceb81d536e04bc941`
      fetch(url)
        .then(response => response.json())
        .then((result) => {
          console.log(result)
        //   result.members.forEach(d => {
        //     dataArray.push(d.population)
        //     countryArray.push(d.countryName)
        //     console.log(`${d.countryName} : ${d.population}`)
        // })
      })
      .then(() => {
        // const margin = { left:80, right:20, top:50, bottom:100 };

        // const width = 600 - margin.left - margin.right,
        // height = 400 - margin.top - margin.bottom;
  
        // const g = d3.select("#chart")
        // .append("svg")
        // .attr("width", width + margin.left + margin.right)
        // .attr("height", height + margin.top + margin.bottom)
        // .append("g")
        // .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

        // // X Scale
        // const x = d3.scaleBand()
        // .range([0, width])
        // .padding(0.2);

        // // Y Scale
        // const y = d3.scaleLinear()
        // .range([height, 0]);

        // X Label
        g.append("text")
        .attr("y", height + 50)
        .attr("x", width / 2)
        .attr("font-size", "20px")
        .attr("text-anchor", "middle")
        .text("Month");

        // Y Label
        g.append("text")
        .attr("y", -60)
        .attr("x", -(height / 2))
        .attr("font-size", "20px")
        .attr("text-anchor", "middle")
        .attr("transform", "rotate(-90)")
        .text("Revenue");

        d3.json("Data/revenues.json").then(function(data){
        // console.log(data);

          // Clean data
          data.forEach(function(d) {
            d.revenue = +d.revenue;
          });

        d3.interval(function() {
          update(data)
        // console.log('Running')
        }, 1000)

        update(data)


})



})
  .catch(error => console.log("error", error.message))
    
}



  document.addEventListener("submit", async function (event) {




    event.preventDefault()

        creatLine()



  })





</script> -->
